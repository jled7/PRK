/*
 * PK7.pdf Ariketak
 * 		LIFO pilaren arazoa soluzionatu, prozesu guztiak
 *		noizbait pilatik aterako direla ziurtatuz.
 *		Segurtasun- eta bizitasun-propietateak aztertu eta hasunarketa egin.
 *			b. Bizitasun propietatea ez dela bortxatzen.
 *
 *		Hausnarketa:
 *			Bizitasun propietatea ez da gehiago bortxatzen, ba ahal dute prozesu 
 *			guztiek ateratzeko aukerarik? Bai. Pila betetako egoera simulatzean,
 *			hauek pila husteko maximo bat ezartzen da, non pila guztiz hustu behar
 *			den. Honek aukera ematen die denei ateratzeko.
 *
 * Egilea: Jon Led
 * Data: 2017-11-28
 */

const PT  = 3 	 	// Pilaren tamaina
range PiR = 0..PT 	// Pilaren rangoa
const PK  = 3		// Prozesu kopurua
range PR  = 0..PK	// Prozesuen rangoa
const MAX = 5		// Max prozesu, betetzean pila hustu
range RM  = 0..MAX	// Pilan sartutako prozesuen kantitatea

Prozesua = (sartu[i:0..PT-1]->atera[i]->Prozesua).

// [i:PiR] Pilaren egoera definitzen du, (ea zoze gehio sartzea dagoen edo atera)
// empty_action erabili behar izan det, if-a bestela ezin dut erabili
LIFO = LIFO[0][0],
LIFO[i:PiR][x:RM] = (when(i>0)           atera[i-1]->if(i==1) then LIFO[i-1][ 0 ]
															  else LIFO[i-1][ x ]
			  		|when(i<PT && x<MAX) sartu[i]  ->			   LIFO[i+1][x+1]
			  		)\{atera[-1]}.

||LIFOO = (p[PR]:Prozesua || p[PR]::LIFO)>>{p[PR].atera}.

